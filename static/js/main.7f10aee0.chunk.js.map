{"version":3,"sources":["logo.svg","functions/commonfunctions.js","functions/strategies.js","component/PriceList.js","App.js","reportWebVitals.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","Candle","symbol","a","interval","limit","changed_percent","axios","get","then","response","console","log","data","catch","error","List","props","handleChange","e","setState","target","name","value","handleClickButton","window","localStorage","setItem","state","handleTest","clearInterval","start_bot","handleMax","buy_sum","sell_sum","SL_sum","token","getItem","coin_list","config","headers","Authorization","coins_data","currencies","post","wallets","forEach","coin","rialBalance","currency","balance","coin_name","coin_balance","Number","parseFloat","this","setInterval","refresh","location","reload","audio","Audio","tether","bids","nobitex_coin_list","binance_coin_list","i","j","price_sum_bid","price_sum_ask","percentage","quantity","balance_rls","k","price_bid","asks","price_ask","price","buyPercent","now","Date","play","allowed_price","amount","String","NobitexToken","buy_data","type","execution","srcCurrency","dstCurrency","undefined","coin_balance_name","sellPercent","sell_data","sleep_time","length","className","placeholder","onChange","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f10aee0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const sleep = (ms) => {\n\treturn new Promise(resolve => setTimeout(resolve, ms));\n}","import axios from 'axios'\n\n\nexport const SL = async (symbol,amount,token,live_price) => {\n\n\tlet SLPercent=window.localStorage.getItem('SLPercent')*0.01\n\tlet Buying_Price=window.localStorage.getItem(symbol)\n\n\tif (live_price< Buying_Price*(1-SLPercent)){\n\t\tlet sell_data = {\n\t\t\ttype: \"sell\",\n\t\t\texecution: \"market\",\n\t\t\tsrcCurrency: symbol,\n\t\t\tdstCurrency: \"rls\",\n\t\t\tamount: String(amount),\n\t\t}\n\t\tlet config = {\n\t\t\theaders: { Authorization: `token ${token}` }\n\t\t};\n\t\tif (amount>0){\n\t\t\tawait axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/market/orders/add', sell_data,config)\n\t\t\t.then((response) => {\n\t\t\t  console.log('Stophhhhhhhhhhhhhhhhhhh Loss',response)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t  console.error('erotttttttttttttttttt',error)\n\t\t\t})\n\t\t}\n\t}\t\n}\n\n\nexport const Candle = async (symbol,interval='30m',limit='6') => {\n\n\tlet changed_percent=0\n\n\tawait axios.get(\"https://api.binance.com/api/v3/klines?interval=\"+interval+\"&limit=\"+limit+\"&symbol=\"+symbol, {} )\n\t.then(response => {\n\t\tconsole.log('ddddddd',response.data[0][1])\n\t\tchanged_percent= (response.data[limit-1][4]-response.data[0][1])/response.data[0][1]*100\n\t})\n\t.catch(error => {\n\t\tconsole.error(error);\n\t\tchanged_percent=0;\n\t});\n\treturn changed_percent\n}\n\n","import React from 'react';\nimport '../App.css';\nimport axios from 'axios'\nimport {sleep} from '../functions/commonfunctions'\nimport {SL,Candle} from '../functions/strategies'\nimport {Balance} from '../functions/Balance'\n\nclass List extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      buy_sum: 0,\n      sell_sum: 0,\n      SL_sum: 0\n    }\n  }\n\n  async componentDidMount () {\n    \n    let token=window.localStorage.getItem('NobitexToken')\n    var coin_list={}\n\n    let config = {\n      headers: { Authorization: `token ${token}` }\n    };\n    \n    let coins_data = {\n      currencies:\"rls,btc,ltc,shib,eth,bch,xlm,trx,doge,etc,bnb,eos,xrp,uni,link,dot,aave,ada\"\n    }\n\n    await axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/users/wallets/list', coins_data, config)\n    .then((response) => {\n      \n      var coins= response.data.wallets\n      coins.forEach(function (coin) {\n              \n        if ( coin.rialBalance > 100000 ){\n          let currency= coin.currency\n          let balance= coin.balance\n          coin_list[currency]= balance\n        }\n      });\n      \n    })\n    .catch((error) => {\n      console.error('erroppppppp',error)\n    })\n    \n    for (var coin in coin_list){\n      let coin_name= 'balance_'+ coin\n      let coin_balance= Number.parseFloat(coin_list[coin], 10)\n\n      this.setState({[coin_name]: coin_balance})\n      \n    }\n\n    this.start_bot = setInterval(() => {\n      this.handleMax()\n    }, 2000)\n\n    var reload_browser = setInterval(() => {\n\n      this.refresh()\n\n    }, 1800000)\n\n    }\n\n  refresh(){\n    window.location.reload(true);\n  };\n\n  async handleMax(){\n\n    var audio = new Audio('https://media.geeksforgeeks.org/wp-content/uploads/20190531135120/beep.mp3');\n\n    axios.get('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/v2/orderbook/USDTIRT')\n    .then((response) => {\n      this.setState({ tether: Number.parseFloat(response.data.bids[0][0], 10) })\n    })\n    .catch((error) => {\n      console.log('erroppppppp'+\"tether request error\",error)\n    })\n\n    let coin_list = [\n      \"btc\",\n      \"eth\",\n      \"ltc\",\n      \"shib\",\n      \"bch\",\n      \"xlm\",\n      \"trx\",\n      \"doge\",\n      \"etc\",\n      \"bnb\",\n      \"eos\",\n      \"xrp\",\n      \"uni\",\n      \"link\",\n      \"dot\",\n      \"aave\",\n      \"ada\"      \n    ]\n\n    // [Namad, zarib nobitex/binance]\n\n    let nobitex_coin_list = [\n      [\"BTCIRT\",1],\n      [\"ETHIRT\",1],\n      [\"LTCIRT\",1],\n      [\"SHIBIRT\",1000],\n      [\"BCHIRT\",1],\n      [\"XLMIRT\",1],\n      [\"TRXIRT\",1],\n      [\"DOGEIRT\",1],\n      [\"ETCIRT\",1],\n      [\"BNBIRT\",1],\n      [\"EOSIRT\",1],\n      [\"XRPIRT\",1],\n      [\"UNIIRT\",1],\n      [\"LINKIRT\",1],\n      [\"DOTIRT\",1],\n      [\"AAVEIRT\",1],\n      [\"ADAIRT\",1]\n    ]\n\n    let binance_coin_list = [\n      \"BTCUSDT\",\n      \"ETHUSDT\",\n      \"LTCUSDT\",\n      \"SHIBUSDT\",\n      \"BCHUSDT\",\n      \"XLMUSDT\",\n      \"TRXUSDT\",\n      \"DOGEUSDT\",\n      \"ETCUSDT\",\n      \"BNBUSDT\",\n      \"EOSUSDT\",\n      \"XRPUSDT\",\n      \"UNIUSDT\",\n      \"LINKUSDT\",\n      \"DOTUSDT\",\n      \"AAVEUSDT\",\n      \"ADAUSDT\"\n    ]\n\n    \n    for (let i = 1; i < nobitex_coin_list.length+1; i++) {\n\n      var j = i-1;\n\n      // nobitex API\n\n      await axios.get('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/v2/orderbook/' + nobitex_coin_list[i-1][0])\n      .then((response) => {\n        // var price= Number.parseFloat(response.data.bids[0][0], 10)/this.state.tether\n        let price_sum_bid=0;\n        let price_sum_ask=0;\n        let percentage = window.localStorage.getItem('percentage');\n        let quantity= this.state.balance_rls*0.01*percentage\n        for (let k = 0; k < 16; k++) {\n          price_sum_bid += Number.parseFloat(response.data.bids[k][0], 10)*Number.parseFloat(response.data.bids[k][1], 10)\n          \n          if (quantity*3 < price_sum_bid){\n            let price_bid = Number.parseFloat(response.data.bids[k][0], 10)/this.state.tether\n            this.setState({ [`nobitex_price_bid${j}`]: price_bid/nobitex_coin_list[j][1] })\n            break;\n          }else{\n            if (k==15){\n              let price_bid = Number.parseFloat(response.data.bids[15][0], 10)*1.03/this.state.tether\n              this.setState({ [`nobitex_price_bid${j}`]: price_bid/nobitex_coin_list[j][1] })\n            }\n          }\n        }\n\n        for (let k = 0; k < 16; k++) {\n\n          price_sum_ask += Number.parseFloat(response.data.asks[k][0], 10)*Number.parseFloat(response.data.asks[k][1], 10)\n          \n          if (quantity*3 < price_sum_ask){\n            let price_ask = Number.parseFloat(response.data.asks[k][0], 10)/this.state.tether\n            this.setState({ [`nobitex_price_ask${j}`]: price_ask/nobitex_coin_list[j][1] })\n            break;\n          }else{\n            if (k==15){\n              let price_ask = Number.parseFloat(response.data.asks[15][0], 10)*0.97/this.state.tether\n              this.setState({ [`nobitex_price_ask${j}`]: price_ask/nobitex_coin_list[j][1] })\n            }\n          }\n        }\n\n      })\n      .catch((error) => {\n        console.error('erroppppppp'+\"error occures while getting price of\" + nobitex_coin_list[i-1][0],\n        error) \n      })\n      \n      //binance API\n\n      await axios.get(\"https://api.binance.com/api/v3/ticker/price?symbol=\"+binance_coin_list[j], {\n      })\n      .then(response => {\n        var price= Number.parseFloat(response.data.price, 10)\n        console.log(\"aaaaaaaa\")\n        this.setState({ [`binance_price${j}`]: price })\n      })\n      .catch(error => {\n        console.error(error);\n      });\n\n      let buyPercent=window.localStorage.getItem('buyPercent')\n\n      if (this.state.buy_sum<20){\n\n        if(((this.state[`binance_price${j}`]-this.state[`nobitex_price_bid${j}`])/this.state[`binance_price${j}`]*100)>buyPercent && buyPercent){\n          Candle(binance_coin_list[j],'1m','1').then((response) =>\n          {\n            if(response>0.1){\n              console.log('buyyyyyyyyyyyyyyy')\n              console.log(\"maxxxx\",this.state[`nobitex_price_bid${j}`],binance_coin_list[j])\n              console.log(\"minnnn\",this.state[`binance_price${j}`],binance_coin_list[j])\n              var now = new Date();\n              console.log(\"taghir\",(this.state[`nobitex_price_bid${j}`]-this.state[`binance_price${j}`])/this.state[`binance_price${j}`]*100,now) \n              audio.play();\n    \n              let allowed_price = (this.state.tether)*0.9875*this.state[`binance_price${j}`]\n              let percentage = window.localStorage.getItem('percentage');\n              let quantity= this.state.balance_rls*0.01*percentage;\n              let amount=String(quantity/(allowed_price*nobitex_coin_list[j][1]))\n    \n              let NobitexToken= window.localStorage.getItem('NobitexToken');\n    \n              let buy_data = {\n                type: \"buy\",\n                execution: \"market\",\n                srcCurrency: coin_list[j],\n                dstCurrency: \"rls\",\n                amount: amount,\n              }\n              let config = {\n                headers: { Authorization: `token ${NobitexToken}` }\n              };\n    \n              axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/market/orders/add', buy_data,config)\n              .then((response) => {\n                console.log('buyyyyyyyy',response)\n                this.setState({buy_sum: this.state.buy_sum+1})\n                window.localStorage.setItem(coin_list[j],this.state[`nobitex_price_bid${j}`])\n    \n                let coin_name= 'balance_'+ coin_list[j]\n                \n                if (this.state[coin_name] == undefined ){\n                  this.setState({[coin_name]: Number.parseFloat(amount, 10)})\n                }else{\n                  this.setState({[coin_name]: this.state[coin_name]+Number.parseFloat(amount, 10)})\n                }\n    \n                console.log('state', this.state[coin_name])\n                \n              })\n              .catch((error) => {\n                console.log('erroppppppp',error)\n              })\n            }\n            else{\n              console.log('It is not trusted')\n            }\n          })\n      }}\n\n      if (this.state.SL_sum<20){\n\n        if (window.localStorage.getItem(coin_list[j])){\n          let NobitexToken= window.localStorage.getItem('NobitexToken');\n          \n          let percentage = window.localStorage.getItem('percentage');\n          let coin_balance_name= 'balance_'+ coin_list[j]\n          let amount=0\n            \n          if (this.state[coin_balance_name] != null){\n            amount= this.state[coin_balance_name]*0.01*percentage\n          }\n\n          // let live_price=2000000000000000000000000000000000;\n          // live_price=this.state[`nobitex_price_ask${j}`]\n          // await SL(coin_list[j],amount,NobitexToken,live_price)\n          // .then(() => {\n          //   this.setState({SL_sum:this.state.SL_sum+1})\n          // })\n          // .catch((error) => {\n          //   console.error('errossssssss',error)\n          // })\n        }\n      }\n\n      let sellPercent=window.localStorage.getItem('sellPercent')\n\n      if (this.state.sell_sum<20){\n\n        if (window.localStorage.getItem(coin_list[j])){\n\n          if((this.state[`nobitex_price_ask${j}`]-this.state[`binance_price${j}`])/this.state[`binance_price${j}`]*100 > sellPercent && sellPercent){\n\n                console.log('sellllllllllll')\n                console.log(\"maxxxx\",this.state[`nobitex_price_ask${j}`],this.state[`binance_price${j}`])\n                console.log(\"minnnn\",this.state[`binance_price${j}`],binance_coin_list[j])\n                console.log(\"nobitex\",this.state[`binance_price${j}`])\n                // console.log(\"nobitex\",  this.state.binance_price,this.state.nobitex_volume)\n                var now = new Date();\n                console.log(\"taghir\",(this.state[`nobitex_price_ask${j}`]-this.state[`binance_price${j}`])/this.state[`binance_price${j}`]*100,now) \n              \n                let percentage= window.localStorage.getItem('percentage')\n                let coin_balance_name= 'balance_'+ coin_list[j]\n                let amount=0\n                \n                if (this.state[coin_balance_name] != null){\n                  \n                  amount= this.state[coin_balance_name]*0.01*percentage\n    \n                }\n    \n                let NobitexToken= window.localStorage.getItem('NobitexToken');\n        \n                let sell_data = {\n                  type: \"sell\",\n                  execution: \"market\",\n                  srcCurrency: coin_list[j],\n                  dstCurrency: \"rls\",\n                  amount: String(amount),\n                }\n            \n                let config = {\n                  headers: { Authorization: `token ${NobitexToken}` }\n                };\n            \n                if (amount>0){\n                  axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/market/orders/add', sell_data,config)\n                  .then((response) => {\n                    console.log('selllllllll',response)\n                    this.setState({sell_sum:this.state.sell_sum+1})\n                    audio.play(); \n                  })\n                  .catch((error) => {\n                    console.log('erroppppppp',error)\n                  })\n                }\n              \n\n    \n          }\n\n        }\n      }\n      var sleep_time= 4000/(1.3*nobitex_coin_list.length)\n      await sleep(sleep_time)\n      \n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name] : e.target.value })\n    { e.target.value === '' && this.setState({ [e.target.name]: null})}\n  }\n\n  handleClickButton = (e) => {\n    let name= e.target.name\n    window.localStorage.setItem([e.target.name],this.state[name])\n  }\n\n  handleTest = () => {\n    clearInterval(this.start_bot);\n    this.handleMax()\n  }\n\n  render(){\n    return (\n      <div className=\"Container\">\n        <div className=\"NobitexToken\">\n          <p>Nobitex Token</p>\n          <input\n            className=\"NobitexToken\"\n            placeholder=\"Nobitex Token\"\n            name=\"NobitexToken\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"NobitexToken\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد دارایی</p>\n          <input\n            name=\"percentage\"\n            placeholder=\"درصد دارایی\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"percentage\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد برای خرید</p>\n          <input\n            name=\"buyPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"buyPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد برای فروش</p>\n          <input\n            name=\"sellPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"sellPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>حد ضرر به درصد</p>\n          <input\n            name=\"SLPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"SLPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <button\n            onClick={() => this.handleTest()}\n          >Test</button>\n      </div>\n    );\n  }\n}\nexport default List;\n","import logo from './logo.svg';\nimport './App.css';\nimport List from './component/PriceList.js'\n\nfunction App() {\n  return (\n    <List />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}